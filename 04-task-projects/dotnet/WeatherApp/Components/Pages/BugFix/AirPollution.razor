@page "/airpollution"
@using Microsoft.Extensions.Configuration
@using Weather.NET
@using Weather.NET.Models
@using Weather.NET.Models.PollutionModel
@using Radzen.Blazor.Rendering
@inject IConfiguration Configuration


<h3>Air Pollution</h3>

<RadzenCard>
    <RadzenCardContent>
        <div class="d-flex align-items-center">
            <RadzenTextBox @bind-Value="cityName" Placeholder="Enter city name"></RadzenTextBox>
            <RadzenButton Text="Search" Click="LoadAirPollutionData"></RadzenButton>
        </div>
    </RadzenCardContent>
</RadzenCard>


@if (@_airDescriptions != null)
{
    <RadzenCard>
        @* //TODO: ðŸ¥‰ - Display the data as plain table. Use for content AnalysisDate and AirQualityDescription*@


        @* //TODO: ðŸ¥ˆ - Display the data as chart. Use for content AnalysisDate and AirQualityDescription*@
    </RadzenCard>
} 
@code {
        private string cityName = string.Empty;
        private WeatherClient _client;
        private PollutionModel _currentAirPollutionData;
        private List<AirDescription> _airDescriptions = new List<AirDescription>();

        protected override void OnInitialized()
        {
            string? apiKey = LoadApiKey();
            if (string.IsNullOrEmpty(apiKey))
            {
                Console.WriteLine("API key is not available");
                return;
            }

            _client = new WeatherClient(apiKey);
        }

        private string cityname = "Frankfurt";

        private string? LoadApiKey()
        {
            var apiKey = Configuration.GetSection("OpenWeatherAPI");
            return apiKey.Value;
        }

        //TODO: ðŸ¥‰ - First Load Lat and Lon Data from Current Weather by city name. Then Load Forecast Air Pollution Data based on the content
        private async Task LoadAirPollutionData()
        {
        }

    }

